/* stylelint-disable */
/**
 * @description   此文件存放公共的 mixin，使用 function mixin 确保 mixin 不会输出
 *                (http://less.bootcss.com/features/#mixins-feature-not-outputting-the-mixin)
 */
@import "../themes/default";

// Sizing shortcuts

.size(@width; @height) {
  width: @width;
  height: @height;
}

.square(@size) {
  .size(@size; @size);
}

// Compatibility for browsers.

// Placeholder text
.placeholder(@color: @input-placeholder-color) {
  // Firefox
  &::-moz-placeholder {
    color: @color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  // Internet Explorer 10+
  &:-ms-input-placeholder {
    color: @color;
  }
  // Safari and Chrome
  &::-webkit-input-placeholder {
    color: @color;
  }
}

// mixins for clearfix
// ------------------------
.clearfix() {
  zoom: 1;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// iconfont mixin
.iconfont-mixin() {
  display: inline-block;
  font-style: normal;
  vertical-align: baseline;
  text-align: center;
  text-transform: none;
  line-height: 1;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  &:before {
    display: block;
    font-family: "@{iconfont-prefix}" !important;
  }
}

.iconfont-font(@content) {
  font-family: '@{iconfont-prefix}';
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: @content;
}

// for iconfont font size
// fix chrome 12px bug, support ie
.iconfont-size-under-12px(@size, @rotate: 0deg) {
  display: inline-block;
  @font-scale: unit(@size / 12px);
  font-size: 12px;
  // IE9
  font-size: ~"@{size} \9"; // lesshint duplicateProperty: false
  transform: scale(@font-scale) rotate(@rotate);
  :root & {
    font-size: @font-size-sm; // reset IE9 and above
  }
}

// motion
.motion-common(@duration: @animation-duration-base) {
  animation-duration: @duration;
  animation-fill-mode: both;
}

.motion-common-leave(@duration: @animation-duration-base) {
  animation-duration: @duration;
  animation-fill-mode: both;
}

.make-motion(@className, @keyframeName, @duration: @animation-duration-base) {
  .@{className}-enter,
  .@{className}-appear {
    .motion-common(@duration);
    animation-play-state: paused;
  }
  .@{className}-leave {
    .motion-common-leave(@duration);
    animation-play-state: paused;
  }
  .@{className}-enter.@{className}-enter-active,
  .@{className}-appear.@{className}-appear-active {
    animation-name: ~"@{keyframeName}In";
    animation-play-state: running;
  }
  .@{className}-leave.@{className}-leave-active {
    animation-name: ~"@{keyframeName}Out";
    animation-play-state: running;
    pointer-events: none;
  }
}

// reset component
.reset-component() {
  font-family: @font-family;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @text-color;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  list-style: none;
}

// Encoded SVG Background
.encoded-svg-background-i(@svg) {
  @url: `encodeURIComponent(@{svg})`;
  background-image: url("data:image/svg+xml;charset=utf-8,@{url}");
}

.ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.generate-ellipsis-multiple-lines(10);
.generate-ellipsis-multiple-lines(@n, @i: 2) when (@i =< @n) {
  .ellipsis-multiple-line-@{i} {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: (@i);
    -webkit-box-orient: vertical;
  }
  .generate-ellipsis-multiple-lines(@n, (@i + 1));
}

.transform(@t) {
  transform: @t;
}

.transform-origin(@to) {
  transform-origin: @to;
}

.display-box() {
  display: flex;
}

.flex-direction(@direction: row) {
  flex-direction: @direction;
}

.flex-wrap(@wrap: nowrap) {
  flex-wrap: @wrap;
}

.flex-justify(@justify: flex-start) {
  justify-content: @justify;
}

.box-align(@align: center) {
  align-items: @align;
}

.box-align-content(@alignContent: stretch) {
  align-content: @alignContent;
}

.box-flex(@scale: 1) {
  flex: @scale;
}

.border-radius(@radius: 0) {
  border-top-left-radius: @radius;
  border-top-right-radius: @radius;
  border-bottom-left-radius: @radius;
  border-bottom-right-radius: @radius;
}

.box-sizing(@sizing: border-box) {
  -webkit-box-sizing: @sizing;
}

.hide() {
  display: none;
}

.show() {
  display: block;
}

.invisible() {
  visibility: hidden;
}

.affix() {
  position: fixed;
}

// 渐变颜色
.gradual-color( @direction , @color1, @color2 ) {
  background: linear-gradient(to @direction, @color1, @color2);
}

@input-affix-width: 19px;

// size mixins for input
.input-lg() {
  padding: @input-padding-vertical-lg @input-padding-horizontal-lg;
  height: @input-height-lg;
  font-size: @font-size-lg;
}

.input-sm() {
  padding: @input-padding-vertical-sm @input-padding-horizontal-sm;
  height: @input-height-sm;
}

// input status
// == when focus or actived
.active(@color: @outline-color) {
  border-color: ~`colorPalette("@{color}", 5)`;
  outline: 0;
  box-shadow: @input-outline-offset @outline-blur-size @outline-width fade(@color, 20%);
  border-right-width: 1px !important;
}

// == when hoverd
.hover(@color: @input-hover-border-color) {
  border-color: ~`colorPalette("@{color}", 5)`;
  border-right-width: 1px !important;
}

.disabled() {
  background-color: @input-disabled-bg;
  opacity: 1;
  cursor: not-allowed;
  color: @disabled-color;
  &:hover {
    .hover(@input-border-color);
  }
}

// Basic style for input
.input() {
  position: relative;
  display: inline-block;
  padding: @input-padding-vertical-base @input-padding-horizontal-base;
  width: 100%;
  height: @input-height-base;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none;
  border: @border-width-base @border-style-base @input-border-color;
  border-radius: @border-radius-base;
  .placeholder(); // Reset placeholder
  transition: all .3s;

  &:hover {
    .hover();
  }

  &:focus {
    .active();
  }

  &-disabled {
    .disabled();
  }

  // Reset height for `textarea`s
  textarea& {
    max-width: 100%; // prevent textearea resize from coming out of its container
    height: auto;
    vertical-align: bottom;
    transition: all .3s, height 0s;
    min-height: @input-height-base;
  }

  // Size
  &-lg {
    .input-lg();
  }

  &-sm {
    .input-sm();
  }
}

// label input
.input-group(@inputClass) {
  position: relative;
  display: table;
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;

  // Undo padding and float of grid classes
  &[class*="col-"] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  > [class*="col-"] {
    padding-right: 8px;
    &:last-child {
      padding-right: 0;
    }
  }

  &-addon,
  &-wrap,
  > .@{inputClass} {
    display: table-cell;

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
  }

  &-addon,
  &-wrap {
    width: 1px; // To make addon/wrap as small as possible
    white-space: nowrap;
    vertical-align: middle;
  }

  &-wrap > * {
    display: block !important;
  }

  .@{inputClass} {
    float: left;
    width: 100%;
    margin-bottom: 0;
    &:focus {
      z-index: 1; // Fix https://gw.alipayobjects.com/zos/rmsportal/DHNpoqfMXSfrSnlZvhsJ.png
      border-right-width: 1px;
    }
    &:hover {
      z-index: 1;
      border-right-width: 1px;
    }
  }

  &-addon {
    padding: 0 @input-padding-horizontal-base;
    font-size: @font-size-base;
    font-weight: normal;
    line-height: 1;
    color: @input-color;
    text-align: center;
    background-color: @input-addon-bg;
    border: @border-width-base @border-style-base @input-border-color;
    border-radius: @border-radius-base;
    position: relative;
    transition: all 0.3s;

    // Reset Select's style in addon
    .@{fishd-prefix}-select {
      margin: -(@input-padding-vertical-base + 1px) (-@input-padding-horizontal-base); // lesshint spaceAroundOperator: false
      background-color: inherit;
      border: @border-width-base @border-style-base transparent;
      box-shadow: none;
      &:hover,
      &:active,
      &:focus,
      &.open {
        border-color: transparent !important;
        box-shadow: none !important;
      }
    }

    // Expand addon icon click area
    // https://github.com/ant-design/ant-design/issues/3714
    > i:only-child:after {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

  // Reset rounded corners
  > .@{inputClass}:first-child,
  &-addon:first-child {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;

    // Reset Select's style in addon
    .@{fishd-prefix}-select {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
  }

  > .@{inputClass}-affix-wrapper {
    &:not(:first-child) .@{inputClass} {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    &:not(:last-child) .@{inputClass} {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
  }

  &-addon:first-child {
    border-right: 0;
  }
  &-addon:last-child {
    border-left: 0;
  }

  > .@{inputClass}:last-child,
  &-addon:last-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;

    // Reset Select's style in addon
    .@{fishd-prefix}-select {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }
  }

  // Sizing options
  &-lg .@{inputClass},
  &-lg > &-addon {
    .input-lg();
  }

  &-sm .@{inputClass},
  &-sm > &-addon {
    .input-sm();
  }

  // Fix https://github.com/ant-design/ant-design/issues/5754
  &-lg .@{fishd-prefix}-select-option-single {
    height: @input-height-lg;
  }

  &-sm .@{fishd-prefix}-select-option-single {
    height: @input-height-sm;
  }

  .@{inputClass}-affix-wrapper {
    display: table-cell;
    width: 100%;
    float: left;
  }

  &&-compact {
    display: block;
    .clearfix;

    & > * {
      border-radius: 0;
      border-right-width: 0;
      vertical-align: top; // https://github.com/ant-design/ant-design-pro/issues/139
      float: none;
      display: inline-block;
    }

    // Undo float for .ant-input-group .ant-input
    .@{inputClass} {
      float: none;
    }

    // reset border for Select, DatePicker, AutoComplete, Cascader, Mention, TimePicker
    & > .@{fishd-prefix}-select > .@{fishd-prefix}-select,
    & > .@{fishd-prefix}-calendar-picker .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-select-auto-complete .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-cascader-picker .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-mention-wrapper .@{fishd-prefix}-mention-editor,
    & > .@{fishd-prefix}-time-picker .@{fishd-prefix}-time-picker-input {
      border-radius: 0;
      border-right-width: 0;
    }

    & > *:first-child,
    & > .@{fishd-prefix}-select:first-child > .@{fishd-prefix}-select,
    & > .@{fishd-prefix}-calendar-picker:first-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-select-auto-complete:first-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-cascader-picker:first-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-mention-wrapper:first-child .@{fishd-prefix}-mention-editor,
    & > .@{fishd-prefix}-time-picker:first-child .@{fishd-prefix}-time-picker-input {
      border-top-left-radius: @border-radius-base;
      border-bottom-left-radius: @border-radius-base;
    }

    & > *:last-child,
    & > .@{fishd-prefix}-select:last-child > .@{fishd-prefix}-select,
    & > .@{fishd-prefix}-calendar-picker:last-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-select-auto-complete:last-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-cascader-picker:last-child .@{fishd-prefix}-input,
    & > .@{fishd-prefix}-mention-wrapper:last-child .@{fishd-prefix}-mention-editor,
    & > .@{fishd-prefix}-time-picker:last-child .@{fishd-prefix}-time-picker-input {
      border-top-right-radius: @border-radius-base;
      border-bottom-right-radius: @border-radius-base;
      border-right-width: 1px;
    }
  }
}

.input-affix-wrapper(@inputClass) {
  position: relative;
  display: inline-block;
  width: 100%;

  &:hover .@{inputClass}:not(.@{inputClass}-disabled) {
    .hover();
  }

  .@{inputClass} {
    position: static;
  }

  .@{inputClass}-prefix,
  .@{inputClass}-suffix {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    line-height: 0;
    color: @input-color;
    :not(.fishdicon) {
      line-height: @line-height-base;
    }
  }

  .@{inputClass}-prefix {
    left: @input-padding-horizontal-base + 1px;
  }

  .@{inputClass}-suffix {
    right: @input-padding-horizontal-base + 1px;
  }

  .@{inputClass}:not(:first-child) {
    padding-left: @input-padding-horizontal-base + @input-affix-width;
  }

  .@{inputClass}:not(:last-child) {
    padding-right: @input-padding-horizontal-base + @input-affix-width;
  }
}
